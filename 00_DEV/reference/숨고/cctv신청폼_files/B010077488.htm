<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, user-scalable=no"><title>PortOne</title></head><body style=""><form name="DanalFrm" action="https://wauth.teledit.com/Danal/WebAuth/Mobile/Start.php" method="post">
  <input type="hidden" name="TID" value="">
  <input type="hidden" name="BackURL" value="">
  <input type="hidden" name="IsUseCI" value="N">
  <input type="hidden" name="CIURL" value="">
  <input type="hidden" name="BgColor" value="00">
  <input type="hidden" name="IsCharSet" value="UTF-8">
  <input type="hidden" name="IsCarrier" value="">
  <input type="hidden" name="IsDstAddr" value="">
  <input type="hidden" name="IsNAME" value="">
  <input type="hidden" name="YearOfBirth" value="">
  <input type="hidden" name="ByPassValue" value="">
  <input type="hidden" name="UsePNS" value="N"> 
</form>
<script src="B010077488_data/jquery-1.10.2.min.js"></script>
<script>
function onScriptLoadFailed(src) {
  try {
    throw new Error('스크립트 (' + src + ') 로드 실패');
  } catch (e) {
    
    var errorCode = 'SCRIPT_LOAD_FAILED_ON_TEMPLATE';
    var errorData = {
      pgProvider: 'danal',
      source: '\/certificates\/danal\/ready_m',
      impUid: null,
      requestData: {},
      scriptSource: src
    };
    onScriptError(e, errorCode, errorData)
  }
}

function onScriptError(e, errorCode, errorData) {
  var requestData = (errorData && errorData.requestData) || {};

  window.parent.postMessage(JSON.stringify({
    action: 'ERROR_ON_TEMPLATE',
    data: {
      success: false,
      request_id: requestData.request_id || null,
      imp_uid: errorData.impUid || null,
      merchant_uid: requestData.merchant_uid || null,
      error_code: errorCode,
      error_msg: e ? e.message : '알 수 없는 이유로 스크립트 실행에 실패하였습니다',
      portoneError: {
        errorCode: errorCode,
        errorData: errorData,
        stackTrace: e ? e.stack : null,
      }
    }
  }), '*');
}

function _response(action, data, source) {
  
  
  
  
  source.postMessage(JSON.stringify({ action: action, data: data }), '*');
}

function IMP_mask_display(display) {
  var op = $.extend({}, display);

  
  
  
  if (Array.isArray(op.card_quota) && op.card_quota.length == 0) {
    op.card_quota = [1];
  }

  return op;
}

window.addEventListener('message', function(e) {
  try {
    var rawMessageData = JSON.parse(e.data);
    if (
      !rawMessageData.hasOwnProperty('action') || 
      rawMessageData.hasOwnProperty('success') || 
      rawMessageData.action === 'communicate' 
    ) { return; }

    $.ajax({
      type : 'POST',
      url: '/events',
      contentType: 'application/json',
      async: true,
      data: JSON.stringify({userCode : 'imp56778396', source: '\/certificates\/danal\/ready_m', rawRequest: rawMessageData})
    });
  } catch (e) {
    
  }
}, false);
</script><script>
(function(window) {
  var document = window.document;
  var data = null;
  var errorData = {
    pgProvider: 'danal',
    source: '\/certificates\/danal\/ready_m',
    impUid: null,
    requestData: null,
  };

  window.onerror = function(msg, url, lineNo, columnNo, e) {
    onScriptError(e, 'SCRIPT_ERROR_ON_TEMPLATE', errorData);
  };

  function formToJson(frm) {
    var arr = $(frm).serializeArray(),
      obj = {};

    $.each(arr, function() {
      obj[ this.name ] = this.value;
    });

    return {
      action : frm.action,
      data : obj
    }
  }

  function versionCompare(left, right) {
    if (typeof left + typeof right != 'stringstring') { return false; }

    var a = left.split('.'), b = right.split('.'), len = Math.max(a.length, b.length);

    for (var i = 0; i < len; i++) {
      if ((a[i] && !b[i] && parseInt(a[i]) > 0) || (parseInt(a[i]) > parseInt(b[i]))) {
        return 1;
      } else if ((b[i] && !a[i] && parseInt(b[i]) > 0) || (parseInt(a[i]) < parseInt(b[i]))) {
        return -1;
      }
    }

    return 0;
  }

  function on_message(e) {
    var obj = {},
      action = null,
      request_id = null;
    var source = e.source;
    var origin = e.origin;

    try {
      obj = JSON.parse(e.data);
      action = obj.action;
      data = obj.data || {};
      request_id = data.request_id;
      origin = obj.origin || origin;
    } catch(e) {}

    errorData['requestData'] = data;

    if ( action == 'certification' ) {
      $.ajax({
        type : 'POST',
        url : '/danal_certificates/prepare.json',
        dataType : 'json',
        data : {
          channel : 'mobile',
          provider : 'danal',
          pg_id : 'B010077488',
          channel_key: '',
          store_id : 'undefined',
          user_code : 'imp56778396',
          channelGroupId: data.channelGroupId,
          origin : origin,
          merchant_uid : data.merchant_uid,
          min_age : data.min_age,
          popup : data.popup,
          company : data.company,
          request_id : request_id,
          m_redirect_url : (obj.version && versionCompare(obj.version, "1.1.7") >= 0) ? data.m_redirect_url : null
        },
        error : function(xhr, status, err) {
          return _response('', {
            success:false,
            request_id:request_id,
            error_code:'HTTP_ERROR:' + xhr.status,
            error_msg:'결제 시작을 위해 서버와 통신하는 중 에러가 발생하였습니다',
            portoneError: {
              errorCode: 'PREPARE_REQUEST_TO_CONTROLLER_FAILED',
              errorData: errorData
            }
          }, source, origin);
        }
      }).done(function(rsp) {
        errorData['impUid'] = rsp.data.imp_uid;

        var portoneError = {
          errorCode: rsp.data.portone_error_code || 'PREPARE_UNKNOWN',
          errorData: errorData
        };

        if ( rsp.code == 0 ) {
          var response = rsp.data;
          var frm = document.forms["DanalFrm"];

          var params = [
            ['imp_uid', response.imp_uid].join('='),
            ['request_id', request_id].join('='),
            ['user_code', 'imp56778396'].join('='),
            ['min_age', data.min_age].join('=')
          ];

          frm.elements['TID'].value = response.pg.TID;
          frm.elements['BackURL'].value = response.pg.BackURL;
          frm.elements['ByPassValue'].value = params.join('&');

          if ( data.phone ) frm.elements["IsDstAddr"].value = String(data.phone).replace(/[^0-9\-]/g, "");
          if ( data.name  ) frm.elements["IsNAME"].value = data.name;
          if ( data.carrier ) frm.elements["IsCarrier"].value = String(data.carrier).toUpperCase();
          if ( data.birth )   frm.elements["YearOfBirth"].value = String(data.birth).replace(/[^0-9]/g, "");

          if ( data.popup ) {
            var proxyData = {
              imp_uid : response.imp_uid,
              form : formToJson(frm)
            };

            return _response('danal.cert.modal', proxyData, source, origin); 
          } else {
            if ( obj.version && versionCompare(obj.version, "1.1.7") >= 0 ) { 
              if ( data.m_redirect_url ) {
                var proxyData = {
                  imp_uid : response.imp_uid,
                  form : formToJson(frm)
                };

                return _response('danal.cert.modal', proxyData, source, origin); 
              }

              
              _response('danal.cert.layer', {cancel_url : response.pg.BackURL}, source, origin);
            }

            frm.submit();
          }
        } else {
          var errorResponse = {
            success: false,
            request_id: request_id,
            imp_uid: rsp.data.imp_uid,
            merchant_uid: data.merchant_uid,
            error_code: rsp.data.error_code,
            error_msg: rsp.data.error_msg,
            portoneError: portoneError
          };
          _response('', errorResponse, source, origin);
        }
      });
    } else if ( action === 'communicate' && data ) {
      if ( data.result === 'check.closing' ) { 
        location.href = '/danal_certificates/closing/' + (data.imp_uid || errorData['impUid']) + '/imp56778396/' + request_id;
      }
    }
  }

  window.addEventListener("message", on_message, false);

}).call({}, window);
</script>
</body></html>